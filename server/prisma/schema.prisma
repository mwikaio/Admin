datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  isAdmin   Boolean?
  lastName  String?
  orders    Order[]
  password  String
  reviews   Review[]
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Product {
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      String?   @db.ObjectId
  color           Json
  createdAt       DateTime  @default(now())
  description     Json
  discountedPrice Float
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  images          Json
  order           Order?    @relation(fields: [orderId], references: [id])
  orderId         String?   @db.ObjectId
  reviews         Review[]
  title           String
  titlePrice      Float
  updatedAt       DateTime  @updatedAt
  variants        Json
}

model Category {
  createdAt DateTime  @default(now())
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Review {
  createdAt  DateTime @default(now())
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  products   Product? @relation(fields: [productsId], references: [id])
  productsId String?  @db.ObjectId
  rating     Int
  updatedAt  DateTime @updatedAt
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?  @db.ObjectId
}

model Order {
  createdAt  DateTime  @default(now())
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  paymentint Boolean?
  price      Float?
  products   Product[]
  status     Json?
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?   @db.ObjectId
}
